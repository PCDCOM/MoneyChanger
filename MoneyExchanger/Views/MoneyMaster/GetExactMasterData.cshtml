@{
    ViewBag.Title = "GetExactMasterData";
}

<html>
<head>
<title>@ViewBag.Title - My ASP.NET MVC Application</title>

<meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- Le styles -->
    <link href=@Url.Content("~/css/bootstrap.css") rel="stylesheet"/>
    <link href=@Url.Content("~/css/bootstrap-responsive.css") rel="stylesheet"/>
	<link href=@Url.Content("~/css/toggle-switch.css") rel="stylesheet"/>
	<link href=@Url.Content("~/css/custom.css") rel="stylesheet"/>
    <link href=@Url.Content("~/css/print.css") rel="stylesheet"/>
    <link href=@Url.Content("~/css/prettyCheckable.css") rel="stylesheet"/>

	<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />

    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="../../Scripts/html5shiv.js"></script>
    <![endif]-->

    <!-- Fav and touch icons -->
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../assets/ico/apple-touch-icon-144-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../assets/ico/apple-touch-icon-114-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../assets/ico/apple-touch-icon-72-precomposed.png">
    <link rel="apple-touch-icon-precomposed" href="../assets/ico/apple-touch-icon-57-precomposed.png">
    <link rel="shortcut icon" href="../assets/ico/favicon.png">
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width" />
         <style>
              .custom-combobox {
                position: relative;
                display: inline-block;
              }
              .custom-combobox-toggle {
                position: absolute;
                top: 0;
                bottom: 0;
                margin-left: -1px;
                padding: 0;
                /* support: IE7 */
                *height: 1.7em;
                *top: 0.1em;
              }
              .custom-combobox-input {
                margin: 0;
                padding: 0.3em;
              }
        </style>

</head>
<body>



<div class="row-fluid">
	<div class="plan clearfix navbar-inner">
                     <div class="navbar">
        <form class="form-horizontal form-dark">
        <fieldset>
          <legend>Currency Transaction</legend>
           <div class="" style="left: 500px;position: absolute;width: 235px;top: 10px;">
       
        <strong id="notificationMessage" style="font-size:20px;color:green"></strong> 
      </div>
      <div class="" style="left: 801px;position: absolute;width: 165px;top: 10px;">
       
        <strong id="lbldate" style="font-size:20px;">@DateTime.Now.ToString("dd/MM/yyyy")</strong> 
      </div>
     

        <div class="MarR25">
       @* <div class="control-group">
	<div class="">
	<button class="btn btn-primary" type="submit" id="btnSave">Save</button>
    <button class="btn btn-primary" type="submit" id="btnPrint">Save and Print</button>
    
	<button class="btn btn-warning" type="submit">Close</button>
	<button class="btn btn-danger" type="submit" onclick="populateData();">Reset</button>
	<button class="btn btn-success hide" type="submit">Fix this Rate</button>
	<button class="btn btn-info hide " type="submit">Clear F5</button>
	<button class="btn btn-inverse hide" type="submit">Audit Report</button>
	<button class="btn btn-redlight hide" type="submit">Stock Report</button>
	</div>
	</div>*@
        	
		  <div class="type">  
		    <label for="selectError" class="control-label pull-left PadR25"></label>
 <div>		  
<label id="BS" class="checkbox toggle well span4 " onclick="">

	<input id="view" type="checkbox" checked />
	<p>

		<span id="spnBuy">Buy</span>
		<span id="spnSell">Sell</span>
	</p>
	
	<a class="btn btn-greend slide-button"></a>
</label>
</div>
</div>
<div class="fieldsWrap">

<div class="control-group">
            <label for="input01" class="control-label">Currency</label>
            <div class="controls">
              <select id="combobox">
   
  </select>
            </div>
          </div>
          	<div class="control-group" style="visibility:hidden">
            <label for="input01" class="control-label">EMMA</label>
            <div class="controls">
              <input type="text" id="input01" placeholder="Rate" class="input-medium">
         
		 </div>
          </div>
        
	
         
          <div class="control-group">
         <label for="txtRate" class="control-label">Rate</label>
            <div class="controls">
              <input type="number" id="txtRate"  placeholder="0.00" class="input-medium">
            </div>
           
         
		 </div>
          <div class="control-group">
             <label for="txtReverseRate" class="control-label">Reverse Rate</label>
            <div class="controls">
              <input type="number" id="txtReverseRate" placeholder="0.00" class="input-medium">
            </div>
          </div>
		

		<div class="control-group">
           <label for="txtFAmount" id="lblReceivingCurrency" class="control-label">FC Amount</label>
            <div class="controls">
              <input type="number" id="txtFAmount" placeholder="0.00" class="input-medium">
            </div>
          </div> 
		  <div class="control-group">

          <label for="input01" id="lblSellingCurrency" class="control-label">L - Amount</label>
            <div class="controls">
              <input type="number" id="txtLAmount" placeholder="0.00" class="input-medium">
            </div>
                      
          </div>
		  
		  
		 
		</div>
		</div> 
		<div class="pull-left Right-side-Area MarL115" >

        


		 <div >
           <label for="input01" class="control-label text-left">Avg Cost</label>
            <div class="controls">
              <input type="number" id="txtAvgCost" placeholder="0.00" class="input-medium" disabled=true>
            </div>
          </div>
		  <div class="MarT10">
            <label for="input01" class="control-label">Stock</label>
            <div class="controls">
              <input type="number" id="txtStock" placeholder="0.00" class="input-medium" disabled=true>
            </div>
          </div>
          <div class="MarT10">
          <label for="input01" class="control-label">User Type</label>
          <div id="divUsers" class="controls"></div>
          </div>
		</div>
		 <div class=" clearfix  pull-left H150 " >
		 <div class="R clearfix Map hide" id="Map"   >
		 <div class="topVal" id="convertToBase">
		 
		 </div>
		 <div class="leftVal" id="locationCurrency">
		SGD
		 </div>
		 <div class="rightVal" id="convertingCurrency">
		
		 </div>
		 <div class="bottomVal" id="convertToCurrency">
		 
		 </div>
		<img src=@Url.Content("~/image/mC.png") class="featurette-image">
		</div>
		 
</div>

        </fieldset>
</form>
      </div>
					</div>
	</div>



  <!-- older one -->
    <div class="" style="position: relative; bottom: 363px; left: 787px; width: 200px;">
        <div class="" style="width: 140px;">
        <div class"CB" style="padding-bottom:10px">
            <button class="btn btn-primary" type="submit" id="btnSave" style="width:120px;">
                Save</button></div>
          <div style="padding-bottom:10px">  <button class="btn btn-primary" type="submit" id="btnPrint" style="width:120px;">
                Save and Print</button></div> 
                <div style="padding-bottom:10px">  <button class="btn btn-danger" type="submit" onclick="populateData();" style="width:120px;">
                Reset</button></div> 
           <div style="padding-bottom:10px" > <button class="btn btn-warning" type="submit" style="width:120px;">
                Close</button></div>
          
            <button class="btn btn-success hide" type="submit">
                Fix this Rate</button>
            <button class="btn btn-info hide " type="submit">
                Clear F5</button>
            <button class="btn btn-inverse hide" type="submit">
                Audit Report</button>
            <button class="btn btn-redlight hide" type="submit">
                Stock Report</button>
        </div>
    </div>
	
	@*<div class="row-fluid ">
	<div class="plan clearfix navbar-inner MarT10 PadT10 ">
	<button class="btn btn-primary" type="submit" id="btnSave">Save</button>
    <button class="btn btn-primary" type="submit" id="btnPrint">Save and Print</button>
    @*<input type="button" value="Default" id="simplePrint" />
	<button class="btn btn-warning" type="submit">Close</button>
	<button class="btn btn-danger" type="submit" onclick="populateData();">Reset</button>
	<button class="btn btn-success hide" type="submit" >Fix this Rate</button>
	<button class="btn btn-info hide " type="submit">Clear F5</button>
	<button class="btn btn-inverse hide" type="submit">Audit Report</button>
	<button class="btn btn-redlight hide" type="submit">Stock Report</button>
	</div>
	</div>*@
    <div style="display:none">
    <div id="toPrint"></div>
    </div>
    <div class="modal fade" id="test_modal">
  <div class="modal-header">
    <a class="close" data-dismiss="modal">&times;</a>
    <h3>Sell MYR </h3>
  </div>
  <div class="modal-body">
 <div class="modal-wrapper">
 <div class="modal-fields">
	<div class="pull-left">   
	MYR
	</div>
	<div class="pull-right"> 
	500.00
	</div>
	</div>
	<div class="modal-fields">
	<div class="pull-left"> 
	SGD
	</div>
	<div class="pull-right"> 
	68.00
	</div>
	</div>
	<div class="modal-fields">
	<div class="pull-left"> 
	REV
	</div>
	<div class="pull-right"> 
	2.3558
	</div>
	</div>
	<div class="modal-fields">
	<div class="pull-left"> 
	Rate
	</div>
	<div class="pull-right"> 
	0.5489
	</div>
	</div>
	</div>
		 
  </div>
  
</div>
    <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->

   
    
  
    <script src=@Url.Content("~/Scripts/jquery-1.7.1.js")></script> 
    <script src=@Url.Content("~/Scripts/jquery.printElement.js") type="text/javascript"></script> 
    <script src=@Url.Content("~/Scripts/jquery-ui.js")></script>
       <script src=@Url.Content("~/Scripts/prettyCheckable.js")></script>
     
 
   
    <script>
        var isDefaultBuy = true;
        var currencyConvResponse = null;
        var selectedCurrency = "";
        var selectedVarience = "";
        var lowLimitVarience = "", highLimitVarience = "";
        var selectedUser = "ARJ";
        function printElem(options, obj) {
            var strHtml = "<span>" + obj.compDetails.Description + "</span><br />";
            strHtml += "<span>Authorised Moneychanger</span><br />";
            strHtml += "<span>" + obj.compDetails.Address1 + "</span><br />";
            strHtml += "<span>" + obj.compDetails.Address2 + "</span><br />";
            strHtml += "<span>" + obj.compDetails.Address2 + "    </span>";
            strHtml += "<span>" + obj.compDetails.Postalcode + "</span><br />";
            strHtml += "<span>Tel: " + obj.compDetails.Phone + "</span><br />";
            strHtml += "<span>LIC No: " + obj.compDetails.TaxRef + "</span><br />";
            strHtml += "<span class='spnBold'>Receipt Number:  " + obj.ret[0].TranNo + "</span>";
            strHtml += "<span style='padding-left:45px;'>" + $("#lbldate").html() + "</span>";

            strHtml += "<hr />";
            strHtml += "<span>Cash Customer</span><br />";
            strHtml += "<table><tr>";
            strHtml += "<th align='left' width='10%'>" + obj.AdditionaValues.currCode + "</th>";
            if (obj.AdditionaValues.transactionType == "B")
                strHtml += "<th align='left' width='10%'>Buy</th>";
            else
                strHtml += "<th align='left' width='10%'>Sell</th>";
            strHtml += "<th align='right' width='30%'> Rate:" + obj.AdditionaValues.Rate + "</th>";
            strHtml += "</tr></table><br/>";
            strHtml += "<table><tr>";
            strHtml += "<th align='right' width='60%'>FC Amt</th>";
            strHtml += "<th align='right' width='40%'>LC Amt</th></tr>";

            strHtml += "<tr><td align='right'>" + obj.AdditionaValues.ForeignAmount + "</td>";
            strHtml += "<td align='right'>" + obj.AdditionaValues.LocalAmount + "</td>";

            strHtml += "</tr></table>";
            strHtml += "<br />";

            strHtml += "<span class='spnBold'>Please Pay: </span><span class='spnBold'>" + obj.AdditionaValues.LocalAmount + "</span><br />";

            strHtml += "<hr />";
            strHtml += "<span class='info'>Pls. Count $ check notes before leaving the counter as we shall not entertain any complaints thereafter. Thank you.</span><br />";
            strHtml += "<hr />";
            $('#toPrint').html(strHtml);
            $('#toPrint').printElement(options);


        }
        $(document).ready(function () {
            $("#test_modal").dialog({
                autoOpen: false,

                hide: {
                    effect: "explode",
                    duration: 1000
                }
            });

            /* var j = jQuery.noConflict(true);
            j('#test_modal').dialog('open');
            // $.noConflict(false);*/
            //jq162 = jQuery.noConflict(true);
            $.ajax({
                url: '@Url.Action("GetExchangeDate", "MoneyMaster")',
                type: "get",
                data: { userName: "emma" },
                success: function (response, textStatus, jqXHR) {
                    // $('#txtExchngRate').val(response.exchangeRate);

                    $.each(response.varCurr, function () {
                        $('#combobox').append($("<option></option>").val(this['Code'] + "-" + this['Varience']).html(this['Code'] + "-" + this['Description']));
                    });

                    $.each(response.varUsers, function () {
                        $('#divUsers').append($("<input>").attr({
                            type: 'radio', name: 'usrs', id: this['UserId'], class: "prettycheckBox", "data-label": this['UserId']
                        })); //.html("").after("<label style='padding-right:30px;'>" + this['UserId'] + "</label>"));
                    });
                    $("input:radio[name=usrs]:first").attr('checked', true);

                    $('input.prettycheckBox').prettyCheckable();
                    $('#divUsers div.clearfix').on('click', function (e) {
                        // alert("hai");
                        // debugger;
                        // alert($(this).next().text());
                        selectedUser = $(this).children("label").text();
                       // alert(selectedUser);
                    });
                    //.closest('.clearfix');
                    //alert(response);

                    //$('#txtForeignAmount').val($('#txtlocalAmt').val() * parseFloat(response.exchangeRate));

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("error");
                }, complete: function () {

                }
            });


        });

        (function ($) {
            $.widget("custom.combobox", {
                _create: function () {
                    this.wrapper = $("<span>")
          .addClass("custom-combobox")
          .insertAfter(this.element);

                    this.element.hide();
                    this._createAutocomplete();
                    this._createShowAllButton();
                },

                _createAutocomplete: function () {
                    var selected = this.element.children(":selected"),
          value = selected.val() ? selected.text() : "";

                    this.input = $("<input>")
          .appendTo(this.wrapper)
          .val(value)
          .attr("title", "")
          .addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")
          .autocomplete({
              delay: 0,
              minLength: 0,
              source: $.proxy(this, "_source")
          })
          .tooltip({
              tooltipClass: "ui-state-highlight"
          });

                    this._on(this.input, {
                        autocompleteselect: function (event, ui) {
                            ui.item.option.selected = true;
                            this._trigger("select", event, {
                                item: ui.item.option
                            });
                        },

                        autocompletechange: "_removeIfInvalid"

                    });
                    $(this.input).on('mouseup', function (e) {
                        e.preventDefault();
                        $(this).select();
                    });
                    $(this.input).on('blur', function (e) {
                        //alert("hai");
                    });
                },

                _createShowAllButton: function () {
                    var input = this.input,
          wasOpen = false;

                    $("<a>")
          .attr("tabIndex", -1)
          .attr("title", "Show All Items")
          .tooltip()
          .appendTo(this.wrapper)
          .button({
              icons: {
                  primary: "ui-icon-triangle-1-s"
              },
              text: false
          })
          .removeClass("ui-corner-all")
          .addClass("custom-combobox-toggle ui-corner-right")
          .mousedown(function () {
              wasOpen = input.autocomplete("widget").is(":visible");
          })
          .click(function () {
              input.focus();
              input.select();
              //c alert("hai");

              // Close if already visible
              if (wasOpen) {
                  return;
              }

              // Pass empty string as value to search for, displaying all results
              input.autocomplete("search", "");
          });
                },

                _source: function (request, response) {
                    var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                    response(this.element.children("option").map(function () {
                        var text = $(this).text();
                        if (this.value && (!request.term || matcher.test(text)))
                            return {
                                label: text,
                                value: text,
                                option: this
                            };
                    }));
                },

                _removeIfInvalid: function (event, ui) {

                    // Selected an item, nothing to do
                    if (ui.item) {
                        return;
                    }

                    // Search for a match (case-insensitive)
                    var value = this.input.val(),
                    valueLowerCase = value.toLowerCase(),
                    valid = false;
                    this.element.children("option").each(function () {
                        if ($(this).text().toLowerCase() === valueLowerCase) {
                            this.selected = valid = true;
                            return false;
                        }
                    });

                    // Found a match, nothing to do
                    if (valid) {
                        return;
                    }

                    // Remove invalid value
                    this.input
          .val("")
          .attr("title", value + " didn't match any item")
          .tooltip("open");
                    this.element.val("");
                    this._delay(function () {
                        this.input.tooltip("close").attr("title", "");
                    }, 2500);
                    this.input.data("ui-autocomplete").term = "";
                },

                _destroy: function () {
                    this.wrapper.remove();
                    this.element.show();
                }
            });
        })(jQuery);


        $(function () {
            $("#combobox").combobox({
                "option": { "style": "width:100px" },
                select: function (event, ui) {
                    // alert("akka");

                    selectedCurrency = $(this).val().split("-")[0];
                    selectedVarience = $(this).val().split("-")[1];
                    $.ajax({
                        url: '@Url.Action("GetExchangeRates", "MoneyMaster")?currencyCode=' + selectedCurrency,
                        type: "get",
                        data: { userName: $(this).val() },
                        success: function (response, textStatus, jqXHR) {
                            // $('#txtExchngRate').val(response.exchangeRate);

                            if (response != null) {

                                currencyConvResponse = response;
                                populateData();
                                $("#txtFAmount").focus();
                            }
                            //alert(response);

                            //$('#txtForeignAmount').val($('#txtlocalAmt').val() * parseFloat(response.exchangeRate));

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert("error");
                        }, complete: function () {

                        }
                    });

                },
                change: function (event, ui) { alert("Hi"); }
            });

        });


        $('#txtFAmount').on('blur', function () {
            if ($(this).val() != "")
                $('#txtLAmount').val(parseFloat(parseFloat($(this).val()) * parseFloat($("#txtRate").val())).toFixed(2));

        });
        $('#txtRate').on('keydown', function (event) {
                    if (event.keyCode == 13) {
                        //$('.tab' + (index + 1)).focus();
                        $('#txtFAmount').focus();
                        event.preventDefault();
                        }
                });
        $('#txtReverseRate').on('keydown', function (event) {
            if (event.keyCode == 13) {
                //$('.tab' + (index + 1)).focus();
                $('#txtRate').focus();
                event.preventDefault();
            }
        });
        $('#txtFAmount').on('keydown', function (event) {
            if (event.keyCode == 13) {
                //$('.tab' + (index + 1)).focus();
                $('#btnPrint').focus();
                event.preventDefault();
            }
        });
        $('#txtLAmount').on('keydown', function (event) {
            if (event.keyCode == 13) {
                //$('.tab' + (index + 1)).focus();
                $('#btnPrint').focus();
                event.preventDefault();
            }
        });
        $('#txtLAmount').on('blur', function () {
            if ($(this).val() != "")
                $('#txtFAmount').val(parseFloat(parseFloat($(this).val()) / parseFloat($("#txtRate").val())).toFixed(2));

        });
        $('#txtRate').on('blur', function () {
            if ($(this).val() != "") {
                $('#txtReverseRate').val(parseFloat(1 / $(this).val()).toFixed(8));
                if ($("#txtFAmount").val() != "")
                $('#txtLAmount').val(parseFloat(parseFloat($(this).val()) * parseFloat($("#txtFAmount").val())).toFixed(2));
            }

            if (isDefaultBuy == true) {

                $("#convertToBase").html(parseFloat($("#txtRate").val()).toFixed(8).toString());
                $("#convertToCurrency").html(parseFloat(1 / $(this).val()).toFixed(8));



            } else {

                $("#convertToBase").html(parseFloat($("#txtReverseRate").val()).toFixed(8));
                $("#convertToCurrency").html(parseFloat($('#txtRate').val()).toFixed(8));
            }
            //$('#txtLAmount').focus();


        });
        $('#txtReverseRate').on('blur', function () {
            if ($(this).val() != "")
                $('#txtRate').val(parseFloat(parseFloat(1 / $(this).val()).toFixed(8)).toString());
            if ($("#txtFAmount").val() != "")
            $('#txtLAmount').val(parseFloat(parseFloat($("#txtRate").val()) * parseFloat($("#txtFAmount").val())).toFixed(2));

            if (isDefaultBuy == true) {

                $("#convertToBase").html(parseFloat($("#txtRate").val()).toFixed(8).toString());
                $("#convertToCurrency").html(parseFloat($('#txtReverseRate').val()).toFixed(8));


            } else {

                $("#convertToBase").html(parseFloat($("#txtReverseRate").val()).toFixed(8));
                $("#convertToCurrency").html(parseFloat(1 / $(this).val()).toFixed(8));
            }
            //$('#txtRate').focus();

        });
        $('#spnBuy').on('click', function () {

            // alert("a");
            isDefaultBuy = true;
            $('#lblReceivingCurrency').html("FC Amount");
            $('#lblSellingCurrency').html("L - Amount");
            $('#txtFAmount').val("");
            $('#txtLAmount').val("");

            if (currencyConvResponse != null) {
                $("#txtRate").val(parseFloat(currencyConvResponse.BuyRate).toFixed(8).toString());
                $("#convertToBase").html(parseFloat(currencyConvResponse.BuyRate).toFixed(8).toString());
                $("#convertToCurrency").html(parseFloat(1 / parseFloat(currencyConvResponse.BuyRate)).toFixed(8));

                $("#txtReverseRate").val(parseFloat(1 / parseFloat(currencyConvResponse.BuyRate)).toFixed(8));
            }
            if (selectedCurrency != "")
                $("#notificationMessage").html("BUY " + selectedCurrency + " SELL SGD");

            $("#convertingCurrency").html(selectedCurrency);

        });
        $('#spnSell').on('click', function () {

            isDefaultBuy = false;
            /* $('#lblReceivingCurrency').html("L - Amount");
            $('#lblSellingCurrency').html("FC Amount");*/
            $('#txtFAmount').val("");
            $('#txtLAmount').val("");
            if (currencyConvResponse != null) {
                $("#txtRate").val(parseFloat(currencyConvResponse.SellRate).toFixed(8));
                $("#convertToBase").html(parseFloat(currencyConvResponse.SellRate).toFixed(8));
                $("#convertToCurrency").html(parseFloat(1 / parseFloat(currencyConvResponse.SellRate)).toFixed(8))

                $("#txtReverseRate").val(parseFloat(1 / parseFloat(currencyConvResponse.SellRate)).toFixed(8));
            }
            if (selectedCurrency != "")
                $("#notificationMessage").html("BUY SGD SELL " + selectedCurrency);

            $("#convertingCurrency").html(selectedCurrency);

        });

        $('#btnSave').on('click', function () {



            var blnConfirm = true;
            if (selectedCurrency  == "") {
                alert("Kindly Selecct Currency");
                blnConfirm = false;
            }
            else if ($("#txtRate").val() == "" || parseFloat($("#txtRate").val()) == 0) {
                 alert("Kindly Enter Rate");
                blnConfirm = false;
            }
            else if ($("#txtReverseRate").val() == "" || parseFloat($("#txtReverseRate").val()) == 0) {
                 alert("Kindly Enter Reverse Rate");
                blnConfirm = false;
            }
            else if ($("#txtFAmount").val() == "" || parseFloat($("#txtFAmount").val()) == 0) {
                alert("Kindly Enter Foreign Currency Amount");
                blnConfirm = false;
            }
            else if ($("#txtLAmount").val() == "" || parseFloat($("#txtLAmount").val()) == 0) {
                alert("Kindly Enter Local Currency Amount");
                blnConfirm = false;
            } 
            else if (parseFloat($("#txtRate").val()) < lowLimitVarience) {
                blnConfirm = confirm("Rate Entered is lesser than the Lower Limit Varience");
                // alert("low");
            } else if (parseFloat($("#txtRate").val()) > highLimitVarience) {
                blnConfirm = confirm("Rate Entered is higher than the Higher Limit Varience");
                //alert("hight");
            } 
            else if (parseFloat($("#txtFAmount").val()) > parseFloat($("#txtStock").val())) {
                alert("Foreign Amount exceeds the Stock limit, kindly enter lesser amount than the stock");
                blnConfirm = false;
            }
            if (!blnConfirm)
                return;

            var BuyorSell = "", foreignAmount = "", localAmount = "";
            foreignAmount = $('#txtFAmount').val();
            localAmount = $('#txtLAmount').val();
           // selectedUser = $('input:radio:checked').next().text();
            if (isDefaultBuy == true) {
                BuyorSell = "B";

            } else {
                BuyorSell = "S";

            }
            var btnHTML = $(this).html();
            $.ajax({
                url: '@Url.Action("SaveTransactions", "MoneyMaster")?currCode=' + selectedCurrency + "&userId=" + selectedUser + "&transactionType=" + BuyorSell + "&Rate=" + $("#txtRate").val() + "&ForeignAmount=" + foreignAmount + "&LocalAmount=" + localAmount + "&AvgCost=" + $("#txtAvgCost").val() + "&AvgStock=" + $("#txtStock").val(),
                type: "get",
                data: { userName: "emma" },
                success: function (response, textStatus, jqXHR, btnHTML) {

                    alert("Saved Succesfully");
                    populateData();

                },
                success: function (response, textStatus, jqXHR, btnHTML) {
                    printElem({ "overrideElementCSS": ["/css/print.css"] }, response);
                    populateData();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Server is busy to Process your Request, please try again later.");
                }, complete: function () {

                }
            });
        });



        $('#btnPrint').on('click', function () {
            var blnConfirm = true;
            if (selectedCurrency == "") {
                alert("Kindly Selecct Currency");
                blnConfirm = false;
            }
            else if ($("#txtRate").val() == "" || parseFloat($("#txtRate").val()) == 0) {
                alert("Kindly Enter Rate");
                blnConfirm = false;
            }
            else if ($("#txtReverseRate").val() == "" || parseFloat($("#txtReverseRate").val()) == 0) {
                alert("Kindly Enter Reverse Rate");
                blnConfirm = false;
            }
            else if ($("#txtFAmount").val() == "" || parseFloat($("#txtFAmount").val()) == 0) {
                alert("Kindly Enter Foreign Currency Amount");
                blnConfirm = false;
            }
            else if ($("#txtLAmount").val() == "" || parseFloat($("#txtLAmount").val()) == 0) {
                alert("Kindly Enter Local Currency Amount");
                blnConfirm = false;
            }
            else if (parseFloat($("#txtRate").val()) < lowLimitVarience) {
                blnConfirm = confirm("Rate Entered is lesser than the Lower Limit Varience");
                // alert("low");
            } else if (parseFloat($("#txtRate").val()) > highLimitVarience) {
                blnConfirm = confirm("Rate Entered is higher than the Higher Limit Varience");
                //alert("hight");
            }
            else if (parseFloat($("#txtFAmount").val()) > parseFloat($("#txtStock").val())) {
                alert("Foreign Amount exceeds the Stock limit, kindly enter lesser amount than the stock");
                blnConfirm = false;
            }
            if (!blnConfirm)
                return;
            var BuyorSell = "", foreignAmount = "", localAmount = "";
            foreignAmount = $('#txtFAmount').val();
            localAmount = $('#txtLAmount').val();
            //selectedUser = $('input:radio:checked').next().text();
            if (isDefaultBuy == true) {
                BuyorSell = "B";

            } else {
                BuyorSell = "S";

            }
            var btnHTML = $(this).html();
            $.ajax({
                url: '@Url.Action("SaveTransactions", "MoneyMaster")?currCode=' + selectedCurrency + "&userId=" + selectedUser + "&transactionType=" + BuyorSell + "&Rate=" + $("#txtRate").val() + "&ForeignAmount=" + foreignAmount + "&LocalAmount=" + localAmount + "&AvgCost=" + $("#txtAvgCost").val() + "&AvgStock=" + $("#txtStock").val(),
                type: "get",
                data: { userName: "emma" },
                success: function (response, textStatus, jqXHR, btnHTML) {

                    
                    printElem({ "overrideElementCSS": ["/css/print.css"] }, response);
                    populateData();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Server is busy to Process your Request, please try again later.");
                }, complete: function () {

                }
            });
        });


        function populateData() {
            //$('#test_modal').dialog('open');
            if (currencyConvResponse != null) {
                //currencyConvResponse = response;
                $('#txtFAmount').val("");
                $('#txtLAmount').val("");

                if (isDefaultBuy == true) {
                    $("#txtRate").val(parseFloat(parseFloat(currencyConvResponse.BuyRate).toFixed(8)).toString());
                    $("#txtReverseRate").val(parseFloat(parseFloat(1 / parseFloat(currencyConvResponse.BuyRate)).toFixed(8)));
                    $("#notificationMessage").html("BUY " + selectedCurrency + " SELL SGD");

                    $("#convertingCurrency").html(selectedCurrency);
                    $("#convertToBase").html(parseFloat(currencyConvResponse.BuyRate).toFixed(8).toString());
                    $("#convertToCurrency").html(parseFloat(1 / parseFloat(currencyConvResponse.BuyRate)).toFixed(8));


                } else {

                    $("#txtRate").val(parseFloat(currencyConvResponse.SellRate).toFixed(8).toString());
                    $("#txtReverseRate").val(parseFloat(parseFloat(1 / parseFloat(currencyConvResponse.SellRate)).toFixed(8)));

                    $("#notificationMessage").html("BUY SGD SELL " + selectedCurrency);

                    $("#convertingCurrency").html(selectedCurrency);
                    $("#convertToBase").html(parseFloat(currencyConvResponse.SellRate).toFixed(8));
                    $("#convertToCurrency").html(parseFloat(1 / parseFloat(currencyConvResponse.SellRate)).toFixed(8));
                }

                $("#txtAvgCost").val(parseFloat(parseFloat(currencyConvResponse.AvgCost).toFixed(8)));
                $("#txtStock").val(parseFloat(parseFloat(currencyConvResponse.Stock).toFixed(8)));
                $('#Map').show();
                selectedVarience
                lowLimitVarience = parseFloat(currencyConvResponse.AvgCost) - ((parseFloat(selectedVarience) / 100) * parseFloat(currencyConvResponse.AvgCost))
                highLimitVarience = parseFloat(currencyConvResponse.AvgCost) + ((parseFloat(selectedVarience) / 100) * parseFloat(currencyConvResponse.AvgCost))
            }


        }



        (function ($) {
            $.fn.enterNext = function () {
                var _i = 0;
                $('input[type=text], select', this)
            .each(function (index) {
                _i = index;
                $(this)
                .addClass('tab' + index)
                .keydown(function (event) {
                    if (event.keyCode == 13) {
                        $('.tab' + (index + 1)).focus();
                        event.preventDefault();
                    }
                });

            })
                $("input[type=submit]", this).addClass('tab' + (_i + 1));
            }
        })(jQuery);

        $('form.element').enterNext();


	</script>
</body>

</html>

